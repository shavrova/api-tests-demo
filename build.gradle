plugins {
    id 'java'
    id 'io.qameta.allure' version '2.5'

}

sourceCompatibility = 1.12
targetCompatibility = 1.12

apply plugin: 'io.qameta.allure'

group 'com.parallel.test'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.3.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.3.2')
    testRuntimeOnly('io.qameta.allure:allure-junit5:2.8.1')

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    compile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.5.1'

    compile group: 'io.rest-assured', name: 'rest-assured', version: '4.0.0'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter', version: '2.1.6.RELEASE'
    compile group: 'org.json', name: 'json', version: '20180813'
    
    compile group: 'io.qameta.allure', name: 'allure-rest-assured', version: '2.12.1'
    compile group: 'commons-validator', name: 'commons-validator', version: '1.6'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'


    compileOnly "org.projectlombok:lombok:1.18.2"
    testCompileOnly "org.projectlombok:lombok:1.18.2"
    annotationProcessor "org.projectlombok:lombok:1.18.2"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.2"
    
    compile group: 'org.springframework', name: 'spring-web', version: '5.1.10.RELEASE'
    compile group: 'org.springframework', name: 'spring-test', version: '5.1.10.RELEASE'
    compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.3.6.RELEASE'
    
}


allure {
    version = '2.7.0'
    autoconfigure = true
    aspectjweaver = true
    clean = true
}

test {
    useJUnitPlatform{
        includeTags 'API'
    }

    testLogging {
        events "passed", "skipped", "failed"
    }
    testLogging.showStandardStreams = true
    ignoreFailures = true

    System.setProperty("allure.results.directory", "build/allure-results")


    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(5) ?: 1
    
    systemProperties = [
            'junit.jupiter.execution.parallel.enabled': true,
            'junit.jupiter.execution.parallel.config.strategy': 'fixed',
            'junit.jupiter.execution.parallel.config.fixed.parallelism': 3
    ]
    
    forkEvery = 3
}

//run single test:
//gradlew test --tests *ImageTest